name: CMake

on:
  push:
    #branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
concurrency:
  group: ${{ github.head_ref || github.ref_name }} 
  cancel-in-progress: true

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CONAN_USER_HOME: "${{ github.workspace }}/release/"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/release/short"
jobs:
  build:
    strategy:
      matrix:
        #version: [10, 12, 14]
        os: [ubuntu-latest]
        compiler: [gcc, clang]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Using the builtin GitHub Cache Action for .conan
      id: github-cache-conan
      uses: actions/cache@v2
      env:
        cache-name: cache-conan-modules
      with:
        path: ${{ env.CONAN_USER_HOME }}
        key: host-${{ runner.os }}-target-${{ runner.os }}-${{ hashFiles('conanfile.py') }}
    - name: Set up cache
      id: cache-cpm
      uses: actions/cache@v2
      with:
       path: ~/cpm-cache
       key: ${{ runner.os }}-cpm-${{ hashFiles('**/') }}
       restore-keys: |
         ${{ runner.os }}-cpm-    
    - uses: actions/checkout@v3
    
    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main
      with:
        version: 1.60.2
    - name: Install GCC prepare env
      uses: egor-tensin/setup-gcc@v1
      with:
        version: 11
        platform: x64 
    - name: Create default Conan profile
      run: conan profile new default --detect    
    - name: Conan profile update
      run:  |
            conan profile update conf.tools.system.package_manager:mode=install default
            conan profile update conf.tools.system.package_manager:sudo=True default    
    - name: Configure CMake
      run: cmake --preset unixlike-${{matrix.compiler}}-debug
    
    - name: Build
      # Build your program with the given configuration
      run: cmake --build --preset unixlike-${{matrix.compiler}}-debug

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
